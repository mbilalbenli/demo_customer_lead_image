import 'package:dartz/dartz.dart';
import '../../domain/entities/lead_entity.dart';
import '../../domain/repositories/lead_repository.dart';

class CreateLeadUseCase {
  final LeadRepository repository;

  CreateLeadUseCase(this.repository);

  Future<Either<Exception, LeadEntity>> call(CreateLeadParams params) {
    return repository.createLead(params.toEntity());
  }
}

class CreateLeadParams {
  final String name;
  final String email;
  final String phone;
  final String company;
  final String notes;
  final LeadStatus status;

  CreateLeadParams({
    required this.name,
    required this.email,
    required this.phone,
    required this.company,
    required this.notes,
    required this.status,
  });

  LeadEntity toEntity() {
    return LeadEntity.create(
      id: '', // Will be generated by backend
      customerName: name,
      email: email,
      phone: phone,
      description: '$company${notes.isNotEmpty ? ' - $notes' : ''}',
      status: status,
      imageCount: 0,
    );
  }
}